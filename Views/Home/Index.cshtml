@model IEnumerable<ShoesShop.Models.Category>
@{
    ViewData["Title"] = "Trang Chủ";
    var sliders = (List<Slider>?)TempData["Sliders"];
}
<div class="main">

    <!-- Carousel Start -->
    <div class="container-fluid p-0 wow fadeIn mt-5 mt-lg-0" data-wow-delay="0.1s">
        <div id="header-carousel" class="carousel slide" data-bs-ride="carousel">
            <div class="carousel-inner">
                @if(sliders != null)
                {
                    @for (var i = 0; i < sliders.Count(); i++)
                    {
                        <div class="carousel-item @(i==0 ? "active" : "")">
                            <img class="image-wrapper" src="@Html.DisplayFor(sliderItem => sliders[i].ImageLink)" alt="Image">
                            <div class="carousel-caption">
                                <div class="container">
                                    <div class="row justify-content-center">
                                        <div class="col-10">
                                            <h1 class="carousel-title display-1 mb-5 animated slideInDown">@Html.DisplayFor(sliderItem => sliders[i].Title)</h1>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
            <button class="carousel-control-prev" type="button" data-bs-target="#header-carousel"
                    data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#header-carousel"
                    data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>
    </div>
    <!-- Carousel End -->
    <div class="container product-wrapper py-5 mt-5">
        <h2 class="text-center pb-4 text-uppercase">Sản phẩm của chúng tôi</h2>

        @if(Model != null) {
            @foreach (var category in Model)
            {
                if (category.Products != null && category.Products.Count() > 0)
                {
                    <div class="px-3">
                        <h5 class="category-item-title">@Html.DisplayFor(model => category.Name)</h5>
                        <hr />
                    </div>
                    <div class="row product-carousel">
                        <button title="product-carousel-left" class="d-none d-lg-flex btn btn-square product-carousel-left"><i class="fa-solid fa-caret-left"></i></button>
                        <button title="product-carousel-right" class="d-none d-lg-flex btn btn-square product-carousel-right"><i class="fa-solid fa-caret-right"></i></button>
                        <div class="row product-carousel-list overflow-y-hidden">
                            @foreach (var item in category.Products)
                            {
                                <div class="product-item col-xl-3 col-md-4 col-6 px-1 px-md-3">
                                    @if (item.Discount.Percent != 0)
                                    {
                                        <i class="fa-solid fa-certificate product-item-saleIcon"></i>
                                        <p class="product-item-saleIcon">@Html.DisplayFor(productItem => item.Discount.Percent)%</p>
                                    }
                                    <a asp-controller="Product" asp-action="Index" asp-route-slug="@item.Slug" class="product-card card">
                                        <img src="@Html.DisplayFor(productItem => item.ImageLink)" class="card-img-top" alt="@Html.DisplayFor(productItem => item.Name)" />
                                        <div class="card-body">
                                            <h5 class="card-title">@Html.DisplayFor(productItem => item.Name)</h5>
                                            @if (item.Discount.Percent != 0)
                                            {
                                                <div class="d-lg-flex d-md-block justify-content-between">
                                                    <p class="product-card-price card-text text-danger fw-bold d-inline-block"><span class="number-with-comma">@Html.DisplayFor(productItem => item.CurrentPrice)</span> đ</p>
                                                    <p class="product-card-price card-text text-decoration-line-through d-inline-block"><span class="number-with-comma">@Html.DisplayFor(productItem => item.Price)</span> đ</p>
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="d-lg-flex d-md-block justify-content-between">
                                                    <p class="product-card-price card-text text-danger fw-bold d-inline-block"><span class="number-with-comma">@Html.DisplayFor(productItem => item.CurrentPrice)</span> đ</p>
                                                    <p> </p>
                                                </div>
                                            }
                                        </div>
                                    </a>
                                </div>
                            }
                        </div>
                    </div>
                }

            }
        }
    </div>

</div>

