@model ShoesShop.Models.Product
@{
    ViewData["Title"] = "Sản phẩm";
    var size = ViewData["Size"] = -1;
    var listQuantity = Model.Items.Select(q => q.Quantity).ToList();
}

<div class="container container-wrapper">
    <div class="row my-3" style=" aspect-ratio: 3; ">
        <div class="col-sm-12 col-lg-6 p-4 ">
            <div class="row product-image-wrapper">
                <div class="col-3 product-list-images-wrapper">
                    
                </div>
                <div class="col-9 ps-3">
                    <img id="largeProductImage" class=" image-wrapper hover-darkness" src="@Html.DisplayFor(image => Model.ImageLink)" alt="product-image" type="button" data-bs-toggle="modal" data-bs-target="#zoomProductImage" />
                </div>

            </div>
        </div>
        <div class="col-sm-12 col-lg-6 p-4">
            <div class="row">
                <div class="product-info-wrapper">
                    <h1 class="product-name p-0">@Html.DisplayFor(productInfo => Model.Name)</h1>
                    <h3 class="product-description">Mô tả : @Html.DisplayFor(productInfo => Model.Description)</h3>
                    <div class="product-price-wrapper">
                        @if (Model.Discount.Percent != 0)
                        {
                            <span class="text-dark product-price">
                                <span class="number-with-comma text-decoration-line-through">@Html.DisplayFor(productInfo => Model.Price)</span> đ
                            </span>
                        }
                        <span class="product-discount-price">
                            <span class="number-with-comma">@Html.DisplayFor(productInfo => Model.CurrentPrice)</span> đ
                        </span>
                    </div>
                    <div class="productItem-list">
                        <form asp-action="BuyProduct" method="post">
                            <div class="form-group w-100">
                                <h3 class="product-description">Giới tính : @Html.DisplayFor(firstItem => Model.Gender.GenderType)</h3>
                                <h3 class="product-description">Còn lại : <span class="product-quantity">@Html.DisplayFor(firstItem => Model.Items[0].Quantity)</span></h3>
                                <h3 class="product-description">Kích thước </h3>
                                <input name="slug" type="hidden" value="@Html.DisplayFor(productInfo => Model.Slug)" />
                                <select name="itemId" title="kích thước" class="form-control product-size-list w-100 p-0" value="SizeId" asp-items="ViewBag.SizeId"></select>
                            </div>
                            <div class="form-group w-100">
                                <label class="product-description">Số lượng :</label>
                                <input name="quantity" value="1" class="rounded input-quantity" type="number" min="1" max="@Html.DisplayFor(firstItem => Model.Items[0].Quantity)" inputmode="numeric" pattern="[0-9]*" />
                            </div>
                            <input type="submit" class="btn btn-buy buyProduct-btn mt-3" value="Mua hàng" />
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="zoomProductImage" tabindex="-1" aria-labelledby="zoomProductImage" aria-hidden="true">
    <div class="modal-dialog ">
        <div class="modal-content">
            <div class="modal-body text-center w-100">
                <img src="@Html.DisplayFor(image => Model.ImageLink)" class="img-fluid" id="zoomedImage">
            </div>
        </div>
    </div>
</div>
<div class="container py-3">
    @if (Model.Category.Products.Count() != 0)
    {
        <div class="row">
            <div class="px-3">
                <h5 class="category-item-title">Sản phẩm liên quan</h5>
                <hr />
            </div>
            <div class="row product-carousel">
                <button class="d-none d-lg-flex btn btn-square product-carousel-left"><i class="fa-solid fa-caret-left"></i></button>
                <button class="d-none d-lg-flex btn btn-square product-carousel-right"><i class="fa-solid fa-caret-right"></i></button>
                <div class="row product-carousel-list">
                    @foreach (var product in Model.Category.Products)
                    {
                        <div class="product-item col-xl-3 col-md-4 col-6 px-3">
                            @if (product.Discount.Percent != 0)
                            {
                                <i class="fa-solid fa-certificate product-item-saleIcon"></i>
                                <p class="product-item-saleIcon">@Html.DisplayFor(productItem => product.Discount.Percent)%</p>
                            }
                            <a asp-controller="Product" asp-action="Index" asp-route-slug="@product.Slug" class="product-card card">
                                <img src="@Html.DisplayFor(productItem => product.ImageLink)" class="card-img-top" alt="@Html.DisplayFor(productItem => product.Name)" />
                                <div class="card-body">
                                    <h5 class="card-title product-item-name">@Html.DisplayFor(productItem => product.Name)</h5>
                                    @if (product.Discount.Percent != 0)
                                    {
                                        <div class="d-lg-flex d-md-block justify-content-between">
                                            <p class="product-card-price card-text text-danger fw-bold d-inline-block"><span class="number-with-comma">@Html.DisplayFor(productItem => product.CurrentPrice)</span> đ</p>
                                            <p class="product-card-price card-text text-decoration-line-through d-inline-block"><span class="number-with-comma">@Html.DisplayFor(productItem => product.Price)</span> đ</p>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="d-lg-flex d-md-block justify-content-between">
                                            <p class="product-card-price card-text text-danger fw-bold d-inline-block"><span class="number-with-comma">@Html.DisplayFor(productItem => product.CurrentPrice)</span> đ</p>
                                            <p> </p>
                                        </div>
                                    }
                                </div>
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <!-- Include multiple-select library -->
    <link rel="stylesheet" href="~/lib/multiple-select/multiple-select.min.css"/>
    <script src="~/lib/multiple-select/multiple-select.min.js" ></script>

    <script defer>
        $(document).ready(function () {
            // Init an size array included property sizeId and quantity
            var sizeArray = [
                @foreach(var item in Model.Items)
                {
                    <text>{ id: @item.SizeId, quantity: @item.Quantity },</text>
                }
            ]

            // Apply multiple select
            $('.product-size-list').multipleSelect({
                single: true,
                isOpen: true,
                keepOpen: true,
                
            });


            var imageLink = [];

            @if (Model.ImageLink != null)
            {
                @:imageLink.push('@Model.ImageLink');
            }

            @foreach (var item in Model.Images)
            {
                @:imageLink.push('@item.ImageLink');
            }
            imageLink.forEach((image) => {
                    $('.product-list-images-wrapper').append(`
                        <div class="flex-md-row d-flex mb-1 justify-content-center">
                            <div class="col-10 p-0">
                                <img class="w-100 btn-image image-wrapper smallProductImage hover-darkness" src="${image}" alt="imageItem" />
                            </div>
                        </div>
            `       )
            })

            // Change the large image
            $('.smallProductImage').click(function () {
                var imageLink = $(this).attr("src");
                $('#largeProductImage').attr("src", imageLink);
                $('#zoomedImage').attr("src", imageLink);
            })

            // Change the quantity
            $('.product-size-list:not(.ms-parent)').change(function () {
                var selected = $(this).val();

                var selectedQuantity
                for (var i = 0; i < sizeArray.length; i++) {
                    if (sizeArray[i].id == selected) {
                        selectedQuantity = sizeArray[i].quantity;
                        break; // Kết thúc vòng lặp nếu đã tìm thấy
                    }
                }
                if (selectedQuantity != 0) {
                    $('.product-quantity').html(selectedQuantity);
                    $('.input-quantity').attr('max', selectedQuantity);
                    $('.input-quantity').val("1");
                    $('.buyProduct-btn').prop('disabled', false);

                } 
                else 
                {
                    $('.product-quantity').html('<span class="text-danger">Hết hàng</span>')
                    $('.input-quantity').attr('max', selectedQuantity);
                    $('.input-quantity').attr('min', 0);
                    $('.input-quantity').attr('value', 0);
                    $('.input-quantity').val(0);
                    $('.buyProduct-btn').prop('disabled',true);
                }
            });
            
        });
    </script>


    
}